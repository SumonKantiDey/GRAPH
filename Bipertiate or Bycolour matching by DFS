///https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=12&page=show_problem&problem=945
#include <bits/stdc++.h>
using namespace std;

inline int in() { int x; scanf("%d", &x); return x; }
const int N = 1200;
vector <int> g[N];
int mark[N];

bool dfs(int v, int color = 2)
{
    //cout <<"node ==== "<< v<<"  "<<color<<endl;
	mark[v] = color;
	for(int u : g[v])
	{
		if(!mark[u] && dfs(u, 3 - color))
        {
           // cout << u << " colour === " << 3- color<<endl;
            return 1;
        }

		if(mark[u] != 3 - color){

            //cout << u << " >>> colour === " << 3- color<<endl;
			return 1;
		}
	}
	return 0;
}

int main()
{
	int n, m,t,p=0;
	while(cin >> n){
            p = 0;
        memset(mark,0,sizeof(mark));
        vector <int> g1[N];
        swap(g1,g);
	    if(n == 0) return 0;
       cin >> m;
	for(int i = 0; i < m; i++)///nodes from 0 to n-1 if nodes start 1 than always --u and --v kore link korte hobe
	{
		int u = in();
		int v = in();
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for(int i = 0; i < n; i++){
		if(!mark[i])
		{
		    //cout << ">>>>>>>>>>>>>> " << i <<endl;
		     if(g[i].empty())
		          continue;
		     if(dfs(i))
			{
				cout << "NOT BICOLORABLE." << endl;

               p = 1;
				break;
			}
		}
	}
	  if(p != 1)cout << "BICOLORABLE." << endl;
	}
}
