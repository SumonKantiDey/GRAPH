///prob uva 459 - Graph Connectivity
///ref http://www.shafaetsplanet.com/planetcoding/?p=763
///ref http://pastebin.com/jrfRqwaG
#include<bits/stdc++.h>
using namespace std;
vector<int>g[27];
bool seen[27];
map<int,int>mp;
void dfs(int u)
{
    seen[u] = true;
    for(int i=0; i<g[u].size(); i++){
        int v = g[u][i];
        if(!seen[v])dfs(v);
    }
    return;
}
int main()
{
    int tc,n;
    char s[3],c;
    cin>>tc;
    while(tc--){
        int cnt=0;
        cin>>c;
        n = c - 'A';
        getchar();
        memset(seen,false,sizeof(seen));
        while(gets(s))
        {
            if(strlen(s) == 0)break;
            g[s[0]-'A'].push_back(s[1]-'A');
            g[s[1]-'A'].push_back(s[0]-'A');
        }
        for(int i=0; i<=n; i++){
            if(!seen[i]){
                dfs(i);
                cnt++;
            }
        }
        cout<<cnt<<endl;
        vector<int>t[27];swap(g,t);
        if(tc)cout<<endl;

    }
    return 0;
}
